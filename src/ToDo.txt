三件大事，三件小事
大事1：当文件下载成功后，需要merge.
大事2：当源文件不从在，可以从*_data和*_index文件获取数据
大事3：断点续传。现在的下载是新鲜的下载，程序启动时，要到工作目录	下，查看所有半拉子工程，即查看所有*_index和*_data文件，然后尝试完成下载。
小事1：添加默认的工作目录，以配置文件的方式。如果没有配置，默认选则工作目录下的data
小事2：要加校验，以块为单位。
小事3：整理代码。

2014.7.31
最终测度：
1.整个过程的同步时间和机器load

现在的做法实时性不太好，因为：现在的做法是先获取所有分片的拥有者信息，然后把chunks分成20组，每组在下载各自的分片。
这样的结构在其他情况下，没有问题，但是在终搜的架构下，就会有问题：
因为索引的拥有者最初只有一个，其他节点都差不多在同一个时间点，去下载，这样的结果就是：大家得到的每个chunk的拥有者列表
都只有最初拥有数据的那个点，这样大家都朝着最初的点下载数据，虽然在下载过程中，拥有者列表一直早更新，但这个跟新不会反馈到
下载线程中，问题就在这里。

所以实时模式应该是这个样子的：
把所有的分片平均分给20个线程，每个线程在下载某个chunk之前，才获取拥有该chunk的机器列表，这样拥有者列表的
更新，就能得到体现，最初拥有数据的节点的压力会小一点。

关于合并：
2014.7.31:16:30：感谢鹰缘，之前的filename_data和filename_index的设计是不合理的，没有必要这么做，用RandomAccessFile就可以了。


现阶段需要完成的事情：
1：修改filename_data和filename_index的文件结构设计---done
2: 添加校验--->用java的socket传送数据的话，用的是TCP链接，TCP本身能保证数据的正确和完整，校验是没有必要的？
3：完成实施模式---done
步骤：
1,2
3

后期要完成的事情：
1：现在的download还是主线程的一个函数调用，虽然文件chunks的下载是并发的，但是多个文件之间的并发还没有做，实用的p2p工具一定要实现这个功能，
	电驴就可以同时下载多个电影，每个电影分chunks再并行，即电影间是并行下载的，电影内部的每个chunks之间也是同步的。---done.
	
2014.8.4:
已改造完成
1：文件结构。
2：实时模式。
3：DownloadChunk逻辑的改造。
4：多线程，即每一次的下载都会以一个单独的下载线程开启。每个下载线程又会开启20个chunk下载线程，并行的下载一个文件
5:多线程批量下载。对多线程下载的简单包装，同时下载好几个文件，当然每个下载任务对应一个下载线程。

后续需要完成：
2：断点续传。
3：校验---要不要做呢？---》还是不要了。
4：要不要搭一个界面呢？

2014.8.5：
1：判断filename_data和filename_index存在性的任务，不该交给DownLoadThread类，该类就是一个简单的下载任务。
2：判断逻辑应该放到DHTPeer类的download和batchdownload里面，这里面给出具体的判断。
3：判断结果有：
  A:filename和filename_index都不在，这是一个新鲜的下载任务，由DownLoader类下载。
  B:filename和filename_index都存在，这是一个之前没有完成的任务，继续下载
  C:只有一个在，要么这个文件已经存在，要么被人破坏了，退出该下载任务。
4：断点续传OK了，可以根据已下载的数据，选择下载目前还没有下载到的数据。

后续工作：
1：整理代码，完善注释，处理异常
2：定义一个分享和下载的结果的枚举类型，比如对于下载：{success,allreadyexits,FingNoMetadataInDHT,SomeChunkNotAvailable}
3：要不要加一个报告进度的“监视器”?

 2014.8.6:
 1:加状态监听的功能，现在可以监听的状态包块：完成下载否？下载多少了(百分比)？结束后成功了吗？下载的是哪个文件？下载是那种类型？(新下载，继续未完成的下载)
 2:调整锁的范围，只包块写文件的那一小步。但是有个问题：这样做之后，一次的socket读取过程的写入要分好几次，这样写得过程不能保证都抢到锁，结果就是：刚在这个位置写了一点数据，
       准备下一次写，锁被人抢走了，其他的线程就会在他们对应的位置写入数据，这样的话，柱头位置"震荡"的问题就会更加的严重，但是这样做，网络的传输和写数据就可以并行了。
 后续工作:
 3:要不要加入搜索功能，和列举所有文件的功能?

 2014.08.7:
 1:做一个简单的shell,实现三个命令：
   ls:列举所有当前目录下的文件名称 和文件大小
   exit：退出这个程序。
   share：共享某个文件
   download：下载某个文件.
  2:启动选项时，需要制定端口。
 2014.8.8
 添加校验。
